
---
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations:
    sas.com/kustomize-base: base
  name: sas-rabbitmq-server

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    sas.com/kustomize-base: base
  labels:
    sas.com/admin: cluster-wide
  name: sas-rabbitmq-server
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - get

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    sas.com/kustomize-base: base
  labels:
    sas.com/admin: cluster-local
  name: sas-rabbitmq-server
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: sas-rabbitmq-server
subjects:
- kind: ServiceAccount
  name: sas-rabbitmq-server

---
apiVersion: v1
#data:
#  RABBITMQ_DEFAULT_USER: c2FzY2xpZW50
stringData:
  conjur-map: |-
    RABBITMQ_DEFAULT_USER: viya-app-rabbit-secret/secret
kind: Secret
metadata:
  annotations:
    orchestration.sas.com/literal: "true"
  name: sas-rabbitmq-server-secret

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/contextRoot: ""
  labels:
    app.kubernetes.io/name: sas-rabbitmq-server
    sas.com/admin: namespace
  name: sas-rabbitmq-server
spec:
  clusterIP: None
  ports:
  - name: amqp
    port: 5672
    protocol: TCP
    targetPort: amqp
  - name: management
    port: 15672
    protocol: TCP
    targetPort: management
  - name: erlang
    port: 25672
    protocol: TCP
    targetPort: erlang
  - name: epmd
    port: 4369
    protocol: TCP
    targetPort: epmd
  - name: metrics
    port: 15692
    protocol: TCP
    targetPort: metrics
  selector:
    app.kubernetes.io/name: sas-rabbitmq-server
  type: ClusterIP

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: test-scripts
data:
  test.sh: |
    #!/bin/bash
    echo "hihihhihihihihihihhihihihihihhihihi~~~~"
    cat /run/conjur/access-token
    until [ -f /run/conjur/access-token ]; do
      echo "hello !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!" >> /test-scripts/test-msg
    #export mytoken=$token
    #export myvariable=$variable
    done
    export token=$(cat /run/conjur/access-token | base64 | tr -d '\r\n')
    export variable=$(curl -sk -H "Authorization: Token token=\"$token\"" "$CONJUR_APPLIANCE_URL/secrets/default/variable/viya-app-rabbit-secret/secret")
    echo "My secret value is: $variable"
    echo $variable
    echo $token
    echo "heyhey"
    #$token >> /test-scripts/token.txt
    #$variable >> /test-scripts/variables.txt
    exit
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/kustomize-base: base
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-rabbitmq-server
    sas.com/admin: namespace
    workload.sas.com/class: stateful
  name: sas-rabbitmq-server
spec:
  podManagementPolicy: Parallel
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-rabbitmq-server
  serviceName: sas-rabbitmq-server
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "15692"
        prometheus.io/scheme: http
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/kustomize-base: base
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-rabbitmq-server
        app.kubernetes.io/name: sas-rabbitmq-server
        workload.sas.com/class: stateful
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateful
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateless
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-rabbitmq-server
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: true
      containers:
      - env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: RABBITMQ_USE_LONGNAME
          value: "true"
        - name: CONJUR_APPLIANCE_URL
          value: "https://conjur-oss.conjur.svc.cluster.local"
        - name: CONJUR_ACCOUNT
          value: "default"
        - name: CONJUR_AUTHN_TOKEN_FILE
          value: /run/conjur/access-token
        - name: CONJUR_SSL_CERTIFICATE
          valueFrom:
            secretKeyRef:
              name: conjur-oss-conjur-ssl-cert
              key: tls.crt
        envFrom:
        - configMapRef:
            name: sas-shared-config
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-java-config
        - secretRef:
            name: sas-rabbitmq-server-secret
        image: sas-rabbitmq-server
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              #command: ["/bin/sh", "-c", "/test-scripts/test.sh"]
              command:
              - "/bin/sh"
              - "-c"
              - |
                until [ -f /run/conjur/access-token ]; 
                do 
                  echo "hello !!!!"; 
                done
                export token=$(cat /run/conjur/access-token | base64 | tr -d '\r\n');
                export variable=$(curl -sk -H "Authorization: Token token=\"$token\"" "$CONJUR_APPLIANCE_URL/secrets/default/variable/viya-app-rabbit-secret/secret");
                echo $variable
                echo $variable > /tmp/tmp_username;
       #command:
       # - sh
       # - '-c'
       # - >-
       #   /bin/bash /test-scripts/test.sh        
      # args: ["-c", "export token=$(cat /run/conjur/access-token | base64 | tr -d '\r\n'); export variable=$(curl -sk -H "Authorization: Token token=\"$token\"" "$CONJUR_APPLIANCE_URL/secrets/default/variable/viya-app-rabbit-secret/secret")"]
       #- -c
       #- |
       #  echo "scripts in /test-scripts"
       #  ls -lh /test-scripts
       #  chmod +x /tmp
       #  echo "copy scripts to /tmp"
       #  cp /test-scripts/*.sh /tmp
       #  echo "apply 'chmod +x' to /tmp/*.sh"
       #  chmod +x /tmp/*.sh
       #  echo "execute test-script.sh now"
       #  /tmp/test-script.sh
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              source ${HOME}/.bashrc; timeout 120 ${SASHOME}/sbin/liveness.sh
          failureThreshold: 5
          periodSeconds: 30
          timeoutSeconds: 120
        name: sas-rabbitmq-server
        ports:
        - containerPort: 5672
          name: amqp
          protocol: TCP
        - containerPort: 15672
          name: management
          protocol: TCP
        - containerPort: 25672
          name: erlang
          protocol: TCP
        - containerPort: 4369
          name: epmd
          protocol: TCP
        - containerPort: 15692
          name: metrics
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              source ${HOME}/.bashrc; timeout 120 ${SASHOME}/sbin/readiness.sh
          failureThreshold: 5
          periodSeconds: 10
          timeoutSeconds: 120
        resources:
          limits:
            cpu: 4000m
            memory: 2Gi
          requests:
            cpu: 1000m
            memory: 1Gi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /rabbitmq/data
          name: sas-viya-rabbitmq-data-volume
        - mountPath: /run/conjur
          name: conjur-access-token
          readOnly: true
        - mountPath: /test-scripts
          name: test-scripts-volume
          readOnly: false
      imagePullSecrets: []
      initContainers:
      - env:
      # - name: CONTAINER_MODE
      #    value: init
        - name: SAS_KEYS_SECRET_NAME
          value: sas-rabbitmq-server-secret
        - name: SAS_KEYS_KEY_NAMES
          value: SAS_RABBITMQ_ERLANG_COOKIE RABBITMQ_DEFAULT_PASS
        - name: SAS_SECURITY_ARTIFACTS_DIR
          value: /security
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        image: sas-certframe
        name: sas-certframe-token-generator
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /security
          name: security
        - mountPath: /certframe-token
          name: certframe-token
      - image: cyberark/conjur-authn-k8s-client
        name: authenticator
        env:
          - name: CONTAINER_MODE
            value: init
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: MY_POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: CONJUR_AUTHN_URL
            value: "https://conjur-oss.conjur.svc.cluster.local/authn-k8s/service_account"
          # value: "https://conjur-oss.conjur.svc.cluster.local/authn-k8s/demo"
          - name: CONJUR_ACCOUNT
            value: "default"
          - name: CONJUR_AUTHN_LOGIN
            value: "host/conjur/authn-k8s/service_account/apps/service-account-based-app-rabbit"
          # value: "host/conjur/authn-k8s/service_account/apps/lab/service/sas-rabbitmq-server"
           #value: "host/conjur/authn-k8s/demo/apps/test/deployment/busybox"
          - name: CONJUR_SSL_CERTIFICATE
            valueFrom:
              secretKeyRef:
                name: conjur-oss-conjur-ssl-cert
                key: tls.crt
        securityContext:
          runAsNonRoot: false
          #runAsUser: 65534
          capabilities:
            drop:
            - ALL
        volumeMounts:
          - mountPath: /run/conjur
            name: conjur-access-token
      securityContext:
        fsGroup: 1001
        runAsNonRoot: true
      serviceAccountName: sas-rabbitmq-server
      terminationGracePeriodSeconds: 60
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - emptyDir: {}
        name: security
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - name: conjur-access-token
        emptyDir:
          medium: Memory
      - name: test-scripts-volume
        configMap:
          name: test-scripts
          defaultMode: 0777
      restartPolicy: Always
  volumeClaimTemplates:
  - metadata:
      name: sas-viya-rabbitmq-data-volume
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 2Gi

---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/ha-class: decentralized
    sas.com/kustomize-base: decentralized
  name: sas-rabbitmq-server
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-rabbitmq-server
